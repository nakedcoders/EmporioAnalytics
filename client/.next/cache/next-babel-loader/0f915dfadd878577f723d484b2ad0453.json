{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar api = _axios[\"default\"].create({\n  baseURL: \"http://localhost:3001\",\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\napi.AuthorizationHeader = function (token) {\n  if (token) {\n    api.defaults.headers[\"Authorization\"] = \"Bearer \".concat(token);\n  }\n};\n\napi.clearToken = function () {\n  delete api.defaults.headers[\"Authorization\"];\n}; // api.AuthorizationHeader = (token) => {\n//   if(token){\n//     api.interceptors.request.use( async (config) => {\n//         config.headers.Authorization = `Bearer ${token}`\n//         return config\n//     }, function(error) {\n//         return Promise.reject(error);\n//     });\n//   }\n// }\n// api.clearToken = () => {\n//   api.interceptors.request.use( async (config) => {\n//       config.headers.Authorization = ''\n//       return config\n//   }, function(error) {\n//       return Promise.reject(error);\n//   });\n// }\n\n\nmodule.exports = api;","map":{"version":3,"sources":["/usr/src/app/api/axios.js"],"names":["api","axios","create","baseURL","timeout","headers","AuthorizationHeader","token","defaults","clearToken","module","exports"],"mappings":";;;;AAAA;;AAGA,IAAIA,GAAG,GAAIC,kBAAMC,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,uBADa;AAEtBC,EAAAA,OAAO,EAAE,KAFa;AAGpBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHW,CAAb,CAAX;;AAQAL,GAAG,CAACM,mBAAJ,GAA0B,UAACC,KAAD,EAAW;AACnC,MAAGA,KAAH,EAAS;AACPP,IAAAA,GAAG,CAACQ,QAAJ,CAAaH,OAAb,CAAqB,eAArB,qBAAmDE,KAAnD;AACD;AACF,CAJD;;AAMAP,GAAG,CAACS,UAAJ,GAAiB,YAAM;AACrB,SAAOT,GAAG,CAACQ,QAAJ,CAAaH,OAAb,CAAqB,eAArB,CAAP;AACD,CAFD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAK,MAAM,CAACC,OAAP,GAAiBX,GAAjB","sourcesContent":["import axios from \"axios\";\n\n\nlet api =  axios.create({\n  baseURL: \"http://localhost:3001\",\n  timeout: 10000,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n});\n\napi.AuthorizationHeader = (token) => {\n  if(token){\n    api.defaults.headers[\"Authorization\"] =  `Bearer ${token}`\n  }\n}\n\napi.clearToken = () => {\n  delete api.defaults.headers[\"Authorization\"]\n}\n\n\n// api.AuthorizationHeader = (token) => {\n//   if(token){\n//     api.interceptors.request.use( async (config) => {\n//         config.headers.Authorization = `Bearer ${token}`\n//         return config\n//     }, function(error) {\n//         return Promise.reject(error);\n//     });\n//   }\n// }\n\n// api.clearToken = () => {\n//   api.interceptors.request.use( async (config) => {\n//       config.headers.Authorization = ''\n//       return config\n//   }, function(error) {\n//       return Promise.reject(error);\n//   });\n// }\n\n\n  \nmodule.exports = api;\n  "]},"metadata":{},"sourceType":"script"}