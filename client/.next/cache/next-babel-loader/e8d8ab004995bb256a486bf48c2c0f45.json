{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\";\nvar api = axios.create({\n  baseURL: \"http://localhost:3001\",\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(function _callee(config) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accessToken'));\n\n        case 2:\n          token = _context.sent;\n          config.headers.Authorization = token;\n          return _context.abrupt(\"return\", config);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}, function (error) {\n  return _Promise.reject(error);\n});\nexport default api;","map":{"version":3,"sources":["/usr/src/app/api/axios.js"],"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","AsyncStorage","getItem","token","Authorization","error","reject"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAIC,GAAG,GAAID,KAAK,CAACE,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,uBADa;AAEtBC,EAAAA,OAAO,EAAE,KAFa;AAGpBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHW,CAAb,CAAX;AAQAJ,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8B,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAENC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAFM;;AAAA;AAEpBC,UAAAA,KAFoB;AAG1BH,UAAAA,MAAM,CAACJ,OAAP,CAAeQ,aAAf,GAA+BD,KAA/B;AAH0B,2CAKnBH,MALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B,EAOK,UAASK,KAAT,EAAgB;AACjB,SAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACD,CATH;AAYE,eAAeb,GAAf","sourcesContent":["import axios from \"axios\";\n\n\nlet api =  axios.create({\n  baseURL: \"http://localhost:3001\",\n  timeout: 10000,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n});\n\napi.interceptors.request.use( async (config) => {\n\n    const token = await AsyncStorage.getItem('accessToken')\n    config.headers.Authorization = token\n  \n    return config\n    \n  }, function(error) {\n    return Promise.reject(error);\n  });\n  \n  \n  export default api;\n  "]},"metadata":{},"sourceType":"module"}