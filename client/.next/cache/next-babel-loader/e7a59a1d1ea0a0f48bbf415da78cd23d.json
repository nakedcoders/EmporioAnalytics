{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userLogout),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userLogoutWatcher),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(productSaga);\n\nimport { all, call, fork, put, takeEvery, takeLatest, select, delay } from \"redux-saga/effects\";\nimport * as types from \"./UserTypes\";\nimport * as actions from \"./UserActions\";\nimport api from \"../../../api/axios\"; //=========================\n// REQUESTS\n//=========================\n\nvar userLogoutRequest = function userLogoutRequest(e) {\n  var data;\n  return _regeneratorRuntime.async(function userLogoutRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(api.post(\"/basecustomerusers/logout\"));\n\n        case 2:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; //=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\n\n\nfunction userLogout(e) {\n  var data;\n  return _regeneratorRuntime.wrap(function userLogout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(userLogoutRequest, e);\n\n        case 3:\n          data = _context2.sent;\n          _context2.next = 6;\n          return put(actions.handleAccountLogout_success(data));\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put(actions.handleAccountLogout_failure(_context2.t0));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n} //=======================\n// WATCHER FUNCTIONS\n//=======================\n\n\nexport function userLogoutWatcher() {\n  return _regeneratorRuntime.wrap(function userLogoutWatcher$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(types.LOGOUT_ACCOUNT, userLogout);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n} //=======================\n// FORK SAGAS TO STORE\n//=======================\n\nexport default function productSaga() {\n  return _regeneratorRuntime.wrap(function productSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([fork(userLogoutWatcher)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/usr/src/app/redux/ducks/user/UserSaga.js"],"names":["userLogout","userLogoutWatcher","productSaga","all","call","fork","put","takeEvery","takeLatest","select","delay","types","actions","api","userLogoutRequest","e","post","data","handleAccountLogout_success","handleAccountLogout_failure","LOGOUT_ACCOUNT"],"mappings":";;;;yBA4BUA,U;;;yBAaOC,iB;;;yBASQC,W;;AAlDzB,SACEC,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,KARF,QASO,oBATP;AAWA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,oBAAhB,C,CAEA;AACA;AACA;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLF,GAAG,CAACG,IAAJ,6BADK;;AAAA;AAClBC,UAAAA,IADkB;AAAA,2CAEjBA,IAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B,C,CAMA;AACA;AACA;;;AACA,SAAUjB,UAAV,CAAqBe,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMX,IAAI,CAACU,iBAAD,EAAoBC,CAApB,CAAV;;AAFjB;AAEUE,UAAAA,IAFV;AAAA;AAGI,iBAAMX,GAAG,CAACM,OAAO,CAACM,2BAAR,CAAoCD,IAApC,CAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMX,GAAG,CAACM,OAAO,CAACO,2BAAR,cAAD,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAUA;AACA;AACA;;;AACA,OAAO,SAAUlB,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMM,SAAS,CAACI,KAAK,CAACS,cAAP,EAAuBpB,UAAvB,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAMP;AACA;AACA;;AACA,eAAe,SAAUE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRE,IAAI,CAACJ,iBAAD,CADI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { \n  all, \n  call, \n  fork, \n  put, \n  takeEvery, \n  takeLatest, \n  select, \n  delay \n} from \"redux-saga/effects\"\n\nimport * as types from \"./UserTypes\"\nimport * as actions from \"./UserActions\"\nimport api from \"../../../api/axios\"\n\n//=========================\n// REQUESTS\n//=========================\n\nconst userLogoutRequest = async(e) => {\n  const data = await api.post(`/basecustomerusers/logout`)\n  return data\n}\n\n\n//=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\nfunction* userLogout(e) {\n  try {\n    const data = yield call(userLogoutRequest, e)\n    yield put(actions.handleAccountLogout_success(data))\n  } catch (error) {\n    yield put(actions.handleAccountLogout_failure(error))\n  }\n}\n\n\n//=======================\n// WATCHER FUNCTIONS\n//=======================\nexport function* userLogoutWatcher() {\n  yield takeEvery(types.LOGOUT_ACCOUNT, userLogout)\n}\n\n\n\n//=======================\n// FORK SAGAS TO STORE\n//=======================\nexport default function* productSaga() {\n  yield all([\n    fork(userLogoutWatcher),\n\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}