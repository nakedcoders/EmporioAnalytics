{"ast":null,"code":"import { all, call, fork, put, takeEvery, takeLatest, select, delay } from \"redux-saga/effects\";\nimport * as types from \"./UserTypes\";\nimport * as actions from \"./UserActions\";\nimport api from \"../../../api/axios\"; //=========================\n// REQUESTS\n//=========================\n\nconst userLogoutRequest = async e => {\n  const data = await api.post(`/basecustomerusers/logout`);\n  return data;\n};\n\nconst userProfileRequest = async e => {\n  const result = await api.get(`/basecustomerusers/${e.payload}/customer`);\n  return result.data;\n}; //=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\n\n\nfunction* userLogout(e) {\n  try {\n    const data = yield call(userLogoutRequest, e);\n    yield put(actions.handleAccountLogout_success(data));\n  } catch (error) {\n    yield put(actions.handleAccountLogout_failure(error));\n  }\n}\n\nfunction* userProfile(e) {\n  try {\n    const data = yield call(userProfileRequest, e);\n    yield put(actions.retrieveUserProfileSuccess(data));\n  } catch (error) {\n    yield put(actions.retrieveUserProfileFailure(error));\n  }\n} //=======================\n// WATCHER FUNCTIONS\n//=======================\n\n\nexport function* userLogoutWatcher() {\n  yield takeEvery(types.LOGOUT_ACCOUNT, userLogout);\n}\nexport function* retrieveUserProfileWatcher() {\n  yield takeEvery(types.RETRIEVE_USER_PROFILE, userProfile);\n} //=======================\n// FORK SAGAS TO STORE\n//=======================\n\nexport default function* productSaga() {\n  yield all([fork(userLogoutWatcher), fork(retrieveUserProfileWatcher)]);\n}","map":{"version":3,"sources":["/usr/src/app/redux/ducks/user/UserSaga.js"],"names":["all","call","fork","put","takeEvery","takeLatest","select","delay","types","actions","api","userLogoutRequest","e","data","post","userProfileRequest","result","get","payload","userLogout","handleAccountLogout_success","error","handleAccountLogout_failure","userProfile","retrieveUserProfileSuccess","retrieveUserProfileFailure","userLogoutWatcher","LOGOUT_ACCOUNT","retrieveUserProfileWatcher","RETRIEVE_USER_PROFILE","productSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,KARF,QASO,oBATP;AAWA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,oBAAhB,C,CAEA;AACA;AACA;;AAEA,MAAMC,iBAAiB,GAAG,MAAMC,CAAN,IAAY;AACpC,QAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAU,2BAAV,CAAnB;AACA,SAAOD,IAAP;AACD,CAHD;;AAKA,MAAME,kBAAkB,GAAG,MAAMH,CAAN,IAAY;AACrC,QAAMI,MAAM,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAS,sBAAqBL,CAAC,CAACM,OAAQ,WAAxC,CAArB;AACA,SAAOF,MAAM,CAACH,IAAd;AACD,CAHD,C,CAMA;AACA;AACA;;;AACA,UAAUM,UAAV,CAAqBP,CAArB,EAAwB;AACtB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACU,iBAAD,EAAoBC,CAApB,CAAvB;AACA,UAAMT,GAAG,CAACM,OAAO,CAACW,2BAAR,CAAoCP,IAApC,CAAD,CAAT;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACM,OAAO,CAACa,2BAAR,CAAoCD,KAApC,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,WAAV,CAAsBX,CAAtB,EAAyB;AACvB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACc,kBAAD,EAAqBH,CAArB,CAAvB;AACA,UAAMT,GAAG,CAACM,OAAO,CAACe,0BAAR,CAAmCX,IAAnC,CAAD,CAAT;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACM,OAAO,CAACgB,0BAAR,CAAmCJ,KAAnC,CAAD,CAAT;AACD;AACF,C,CAED;AACA;AACA;;;AACA,OAAO,UAAUK,iBAAV,GAA8B;AACnC,QAAMtB,SAAS,CAACI,KAAK,CAACmB,cAAP,EAAuBR,UAAvB,CAAf;AACD;AAGD,OAAO,UAAUS,0BAAV,GAAuC;AAC5C,QAAMxB,SAAS,CAACI,KAAK,CAACqB,qBAAP,EAA8BN,WAA9B,CAAf;AACD,C,CAID;AACA;AACA;;AACA,eAAe,UAAUO,WAAV,GAAwB;AACrC,QAAM9B,GAAG,CAAC,CACRE,IAAI,CAACwB,iBAAD,CADI,EAERxB,IAAI,CAAC0B,0BAAD,CAFI,CAAD,CAAT;AAKD","sourcesContent":["import { \n  all, \n  call, \n  fork, \n  put, \n  takeEvery, \n  takeLatest, \n  select, \n  delay \n} from \"redux-saga/effects\"\n\nimport * as types from \"./UserTypes\"\nimport * as actions from \"./UserActions\"\nimport api from \"../../../api/axios\"\n\n//=========================\n// REQUESTS\n//=========================\n\nconst userLogoutRequest = async(e) => {\n  const data = await api.post(`/basecustomerusers/logout`)\n  return data\n}\n\nconst userProfileRequest = async(e) => {\n  const result = await api.get(`/basecustomerusers/${e.payload}/customer`)\n  return result.data\n}\n\n\n//=========================\n// CALL(GENERATOR) ACTIONS\n//=========================\nfunction* userLogout(e) {\n  try {\n    const data = yield call(userLogoutRequest, e)\n    yield put(actions.handleAccountLogout_success(data))\n  } catch (error) {\n    yield put(actions.handleAccountLogout_failure(error))\n  }\n}\n\nfunction* userProfile(e) {\n  try {\n    const data = yield call(userProfileRequest, e)\n    yield put(actions.retrieveUserProfileSuccess(data))\n  } catch (error) {\n    yield put(actions.retrieveUserProfileFailure(error))\n  }\n}\n\n//=======================\n// WATCHER FUNCTIONS\n//=======================\nexport function* userLogoutWatcher() {\n  yield takeEvery(types.LOGOUT_ACCOUNT, userLogout)\n}\n\n\nexport function* retrieveUserProfileWatcher() {\n  yield takeEvery(types.RETRIEVE_USER_PROFILE, userProfile)\n}\n\n\n\n//=======================\n// FORK SAGAS TO STORE\n//=======================\nexport default function* productSaga() {\n  yield all([\n    fork(userLogoutWatcher),\n    fork(retrieveUserProfileWatcher),\n\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}