{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar api = _axios[\"default\"].create({\n  baseURL: \"http://localhost:3001\",\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\napi.AuthorizationHeader = function (token) {\n  api.interceptors.request.use(function _callee(config) {\n    return _regenerator[\"default\"].async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config.headers.Authorization = token;\n            console.log('headers.Authorization updated');\n            return _context.abrupt(\"return\", config);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }, function (error) {\n    return _promise[\"default\"].reject(error);\n  });\n};\n\napi.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.message === \"Network Error\") {\n    // The user doesn't have internet\n    return _promise[\"default\"].reject(error);\n  }\n\n  switch (error.response.status) {\n    case 400:\n      break;\n\n    case 401:\n      break;\n\n    case 403:\n      break;\n\n    case 404:\n      break;\n\n    case 500:\n      break;\n\n    default:\n      break;\n  }\n\n  return _promise[\"default\"].reject(error);\n});\nmodule.exports = api;","map":{"version":3,"sources":["/usr/src/app/api/axios.js"],"names":["api","axios","create","baseURL","timeout","headers","AuthorizationHeader","token","interceptors","request","use","config","Authorization","console","log","error","reject","response","message","status","module","exports"],"mappings":";;;;;;;;AAAA;;AAGA,IAAIA,GAAG,GAAIC,kBAAMC,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,uBADa;AAEtBC,EAAAA,OAAO,EAAE,KAFa;AAGpBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHW,CAAb,CAAX;;AAQAL,GAAG,CAACM,mBAAJ,GAA0B,UAACC,KAAD,EAAW;AACjCP,EAAAA,GAAG,CAACQ,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8B,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAC1BA,YAAAA,MAAM,CAACN,OAAP,CAAeO,aAAf,GAA+BL,KAA/B;AACAM,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAF0B,6CAGnBH,MAHmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B,EAKG,UAASI,KAAT,EAAgB;AACf,WAAO,oBAAQC,MAAR,CAAeD,KAAf,CAAP;AACH,GAPD;AAQH,CATD;;AAWAf,GAAG,CAACQ,YAAJ,CAAiBS,QAAjB,CAA0BP,GAA1B,CACE,UAAAO,QAAQ,EAAI;AACV,SAAOA,QAAP;AACD,CAHH,EAIE,UAAAF,KAAK,EAAI;AACP,MAAIA,KAAK,CAACG,OAAN,KAAkB,eAAtB,EAAuC;AACrC;AACA,WAAO,oBAAQF,MAAR,CAAeD,KAAf,CAAP;AACD;;AACD,UAAQA,KAAK,CAACE,QAAN,CAAeE,MAAvB;AACE,SAAK,GAAL;AACE;;AACF,SAAK,GAAL;AACE;;AACF,SAAK,GAAL;AACE;;AACF,SAAK,GAAL;AACE;;AACF,SAAK,GAAL;AACE;;AACF;AACE;AAZJ;;AAcA,SAAO,oBAAQH,MAAR,CAAeD,KAAf,CAAP;AACD,CAxBH;AA4BAK,MAAM,CAACC,OAAP,GAAiBrB,GAAjB","sourcesContent":["import axios from \"axios\";\n\n\nlet api =  axios.create({\n  baseURL: \"http://localhost:3001\",\n  timeout: 10000,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n});\n\napi.AuthorizationHeader = (token) => {\n    api.interceptors.request.use( async (config) => {\n        config.headers.Authorization = token\n        console.log('headers.Authorization updated')\n        return config\n\n    }, function(error) {\n        return Promise.reject(error);\n    });\n}\n\napi.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    if (error.message === \"Network Error\") {\n      // The user doesn't have internet\n      return Promise.reject(error);\n    }\n    switch (error.response.status) {\n      case 400:\n        break;\n      case 401:\n        break;\n      case 403:\n        break;\n      case 404:\n        break;\n      case 500:\n        break;\n      default:\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\n  \nmodule.exports = api;\n  "]},"metadata":{},"sourceType":"script"}